











--> OK... ACABAMOS COM ESSA COURSE SECTION...








APRENDEMOS QUE FREQUENTEMENTE VAMOS QUERER CONECTAR NOSSOS CLOUD SERVICES AOS NOSSOS FRONTEND 

APPS...  CONECTAR __ A NOSSOS WEB APPS, MOBILE APPS, DESKTOP APPS...













ISSO PQ MTOS CLOUD SERVICES 



DEVEM SER USADOS POR FRONTEND APPS --> SE VC TEM 1 DATABASE NA CLOUD QUE ARMAZENA 

PRODUCTS, 



AÍ É CLARO QUE VC TALVEZ TENHA ESSA DATABASE PQ VC QUER MOSTRAR 


ESSES 
PRODUCTS 

EM 

1 FRONTEND, NO FINAL DAS CONTAS...















----> E A COMUNICACAO ENTRE O BACKEND E O FRONTEND 

TIPICAMENTE OCORRE 



POR MEIO DE HTTP APIs..












-> E PODEMOS ESCREVER ESSAS APIs por conta própria..









-> E MANEIRAS TÍPICAS DE CONSTRUIR ESSAS APIs 


SAO 



REST  E GRAPHQL APIs...




E VC PODE CONSTRUIR ESSAS APIS POR CONTA PRÓPRIA,


ESCREVER O CÓDIGO POR CONTA PRÓPRIA,

E HOSTEAR 

ESSE CÓDIGO POR CONTA PRÓPRIA..





MAS REPETIR ESSE BOILERPLATE CODE PODE SER ANNOYING,

POR ISSO 



O AWS TE OFERECE 

SERVICES QUE SIMPLIFICAM ESSE BUILD...









 
 API GATEWAY -> TE DEIXA BUILD SERVERLESS REST APIs...







 APPSYNC --> TE DEIXA __ BUILD SERVERLESS GRAPHQL APIS FÁCIL...


















 E QUANTO AO BUILD DE APIs,


VC:






1) DEFINE RESOURCES E COMO REQUESTS DEVEM SER HANDLADOS, COM O API GATEWAY...






2) COM O APPSYNC (graphQL),
vc, por outro lado,

DEFINE AS QUERY DEFINITIONS SUPORTADAS,

COMO 

A DATA DEVERÁ 

PARECER,



E COMO DIFERENTES REQUESTS, PARA DIFERENTES TIPOS DE DATA,

DEVEM SER HANDLADOS... 






3) TIPICAMENTE UMA LAMBDA FUNCTION ACABA SENDO EXECUTADA,
A PARTIR 

DESSAS QUERIES/REQUESTS...






4) ISSO QUER DIZER QUE A MAIOR PARTE DO BOILERPLATE CODE 
É REMOVIDA,

NESSES CASOS...






5) A ÚNICA PARTE QUE TE RESTA CODAR É A PARTE DE BUSINESS LOGIC,

COMO 

A PARTE QUE FAZ FETCH DE DATA DE 1 DATABASE...







6) QUER DIZER QUE ESSES SERVICES TE DEIXAM HANDLAR OS REQUESTS E RODAR 


ESSAS APIS 



SEM _ PRECISAR ACTUALLY RODAR E CRIAR OS API SERVERS (com ec2 instances  ou containers... nao precisamos mais os settar, se usamos api gateway/appsync + lambda )









7) TAMBÉM PODEMOS IMPLEMENTAR AUTH FACILMENTE, COM ESSAS APIS,

POR MEIO 



DO COGNITO (auth de users de seu app)...









8) API GATEWAY E APPSYNC --> POSSUEM O GOAL DE TAKE AWAY O BURDEN 

DE CONSTRUIR APIs por conta própriaa...






9) EM GERAL, O AWS 
OFERECE SERVICES QUE SIMPLIFICAM O TRABALHO COM A CLOUD E 

O CONNECT DE 

FRONTEND APPS A CLOUD...









10) AMPLIFY --> É OUTRO SERVICE/PLATFORM QUE 

TEM O OBJETIVO DE SIMPLIFICAR O CLOUD APP DEVELOPMENT...









AMPLIFY --> PODE SER USADO PARA USAR OUTROS 

AWS SERVICES PARA VOCE, POR TRÁS DAS CENAS,

TUDO SEM 
SABER COMO ESSES SERVICES ACTUALLY FUNCIONAM... -> VC PODE DIZER AO 



AMPLIFY ('"QUERO UMA DATABASE""),


PARA ENTAO 


ELE USAR O DYNAMODB PARA VC CONSEGUIR 


EXATAMENTE A DATABASE 

QUE 

VC 
QUER, 

TUDO 
SEM SABER

COMO 

ESSA DATABASE FUNCIONA...












--> ALÉM DISSO,


O AMPLIFY 

PODE TE FORNECER UM COMPLETO ""CONTENT MANAGEMENT SYSTEM"",

se necessário,

para que 

VC CONSIGA MANAGEAR MAIS DO QUE SEUS AWS SERVICES E RESOURCES,


CONSIGA MANAGEAR TAMBÉM A DATA QUE VC QUER TER PARA SEU APP....










-> E VC PODE USAR O AMPLIFY SDK COM DIFERENTES PROGRAMMING LANGUAGES,


PARA QUE FACILMENTE INTEGRE 
CLOUD SERVICE ACCESS 

EM FRONTEND APPS,

PARA QUE 


VC, POR EXEMPLO, 


FACILMENTE CONSIGA 


INICIAR O COGNITO 




E __ COMECAR O USER AUTH DE DENTRO DE SEUS FRONTEND APPS,

COM A AJUDA DAQUELA SDK DO AMPLIFY...