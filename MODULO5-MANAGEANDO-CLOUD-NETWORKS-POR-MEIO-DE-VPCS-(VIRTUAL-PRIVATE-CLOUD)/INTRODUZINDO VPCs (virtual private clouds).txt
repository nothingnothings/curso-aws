











A IDEIA POR TRÁS DO SERVICE DE 'VPC' OFERECIDO PELO AWS É QUE 

VC 

PODE 


__ CONSTRUIR __ SUA PRÓPRIA NETWORK,

NA CLOUD..











--> A IDEIA É QUE 


VC 


PODE 

TER 

MÚLTIPLAS INSTANCES,

QUE 



VC PODE AGRUPAR 



EM 1 OU MAIS VPCS...













-> QUER DIZER QUE PODEMOS TER MÚLTIPLOS VPCs,



E CADA 

VPC PODE CONTER POSSIVELMENTE MÚLTIPLAS 


EC2 INSTANCES ------> ISSO QUER DIZER QUE 

PODEMOS ORGANIZAR 


NOSSAS EC2 INSTNACES NESSES VPCS..











-> MAS É CLARO QUE ESSA NÃO É APENAS UMA FEATURE DE ORGANIZATION..








--> SERVE PARA MAIS DO QUE APENAS 


FAZER 'GROUP' DE SUAS INSTANCES (pq você poderia usar tags, para isso)...













-> A IDEIA É QUE VC TAMBÉM PODE CONTROLAR 'NETWORK SETTINGS' 

PARA ESSAS INSTANCES,



EM 1 'GROUP-LEVEL'...














--> POR EXEMPLO, VC PODE CONTROLAR IP ADDRESS ASSIGNMENT (no seu vpc),


E 

O NETWORK TRAFFIC TAMBÉM PODE SER CONTROLADO POR MEIO DE VPCS...











--> VC PODE ESSENCIALMENTE CONFIGURAR SE INSTANCES 

ESTARÃO CONECTADAS ENTRE SI,



E SE ESTARÃO CONECTADAS à INTERNET AT ALL..









--> QUER DIZER QUE AQUI NÃO ESTAMOS FALANDO SOBRE O BLOCK DE REQUESTS,

E SIM 

SOBRE 

A ACTUAL CONECTIVIDADE ENTRE AS INSTANCES...












--> E ISSO NÃO É OBTIDO APENAS POR ESSE CONCEITO VPC,


MAS TAMBÉM POR MEIO DE UM CONCEITO RELACIONADO,
CHAMADOO 




DE 

'''''SUBNETS''''











--> DENTRO DE CADA VPC,



AGRUPAMOS NOSSAS INSTANCES NAQUILO QUE CHAMAMOS DE ""SUBNETS""....










-> E, É CLARO, 


SE VC 

TIVER ALGUM BACKGROUND EM NETWORKING,

O TERMO 

''SUBNET'' 


PODE 



SIGNIFICAR ALGO PARA VOCË...















OK....  MAS A IDEIA É QUE VC AGRUPA INSTANCES EM 1 VPC...






--> E, DENTRO DESSE VPC,

VC AGRUPA ESSAS INSTANCES EM SUBNETS...









-> E SAO AS SUBNETS QUE ACTUALLY CONTROLAM 


NETWORK REQUESTS SETTINGS, OU, PARA SER MAIS PRECISO,


A CONECTIVIDADE 

DESSAS 

SUBNETS..












-> VC PODE CONTROLAR _ SE __ SUBNETS SERÃO 

""PRIVATE"" (apenas internal requests)  OU 

"""PUBLIC"" 





A IDEIA, É CLARO,

É QUE 



PRIVATE SUBNETS POSSUEM ACESSO APENAS INTERNO,


ÀS SUAS INSTANCES;








JÁ 




PUBLIC SUBNETS POSSUEM ACESSO TAMBÉM À INTERNET...














MAS VALE A PENA MENCIONAR QUE ISSO NÃO É APENAS 

CONECTIVIDADE ""ENTRE INSTANCES EM 1 MESMA SUBNET"",

PQ 


TODAS AS INSTANCES 


EM 

1 


VPC PODEM ""TALK TO EACH OTHER"",


NAO INTERESSA SE ESTÃO EM 1 MESMA SUBNET OU NÃO...












------->  MAS COM 1 SUBNET,


VC PODE CONTROLAR SE 


AS INSTANCES ESTARAO CONECTADAS À INTERNET OU NAO...











-> E VC TAMBÉM PODE ACTUALLY CONTROLAR 


""EM QUE LUGAR, EM UMA REGION, 

SUA INSTANCE SERÁ LAUNCHED""...

















--> MAIS CEDO NO CURSO,

APRENDEMOS QUE 




EXISTEM MÚLTIPLOS DATA CENTERS EM 1 MESMA REGION...








___ E ESSES DATA __ CENTERS__ SÃO AGRUPADOS NAQUILO QUE CHAMAMOS 



DE AVAILABILITY ZONES... (AZs) 












AZs sao sempre separadas 1 das outras...










-> MAS QUANDO AGRUPAMOS INSTANCES EM SUBNETS, TANTO PRIVATE COMO PUBLIC,


PODEMOS ESCOLHER ""EM QUAL AVAILABILITY ZONE""


ESSAS SUBNETS SERÃO POSICIONADAS...




-> COM ISSO, TODAS AS INSTANCES QUE PERTENCEM A 1 MESMA SUBNET 

FICAM EM 1 MESMA AVAILABILITY ZONE...
















--> MAS, ALÉM DISSO,



NÓS TEMOS 


AQUELA INTERNET CONNECTIVITY THING QUE O PROFESSOR FALOU..





--> E 1 PUBLIC SUBNET SE TORNA 1 PUBLIC SUBNET 

POR MEIO 

DO ADD DE 1 ""INTERNET GATEWAY"" A ELE...














-> quando construímos 1 vpc com o console AWS,



PODEMOS __ ESCOLHER __ ADICIONAR 1 ""INTERNET GATEWAY"" 

AO VPC... -----> E, COM ISSO,



PODEMOS CONECTAR __ __CERTAS __ SUBNETS__ A ESSE INTERNET GATEWAY...











-> 1 PRIVATE SUBNET 
__NÃO TEM 1 CONEXAO AO INTERNET GATEWAY -->  ISSO QUER DIZER QUE 


AS INSTANCES DENTRO DE PRIVATE SUBNETS 


SÓ PODEM 


__ SE COMUNICAR:





1) ENTRE SI 





2) COM INSTANCES DENTRO DE SEU PRÓPRIO VPC...


















---> QUER DIZER QUE NAO CONSEGUEM SE COMUNICAR COM A INTERNET...












-> OUTRA ALTERNATIVA:

SE VC QUER, EM 1 instance em 1 private subnet,



""OUTGOING CONNECTIVITY'' (para baixar patches, por exemplo),



MAS 

AO MESMO TEMPO QUER 



___ LIMITAR__  OS INCOMING REQUESTS A ESSA INSTANCE NESSA PRIVATE SUBNET,




VC __ PODE __ DEFINIR 1  """"NAT GATEWAY"""














NAT --> NETWORK ACCESS TRANSLATION -------> ISSO _ CONFERE 


AOS PRIVATE SUBNET INSTANCES  ___ ACESSO __ INDIRETO À INTERNET,



POR MEIO DO ""INTERNET GATEWAY"",

MAS APENAS 


PARA 



__ _OUTGOING __ REQUESTS... 









--> ISSO PQ __ OS ''PRIVATE SUBNET INSTANCES''



AINDA NÃO TERÃO NENHUM PUBLICLY EXPOSED IP ADDRESS -> O QUE QUER DIZER QUE 



INCOMING REQUESTS AINDA NAO SERAO CAPAZES DE OS ALCANÇAR...













OK.. MAS OS NAT GATEWAYS SAO OPCIONAIS -->   SAO USADOS EM CASOS 


COMO O 



DESCRITO ANTERIORMENTE (

EM QUE O PROFESSOR GOSTARIA DE ENVIAR REQUESTS, PARA BAIXAR PATCHES,

MAS AO MESMO TEMPO SEM RECEBER REQUESTS...
)















--> CERTO... MAS O ''INTERNET GATEWAY'',



EM 1 VPC,

NAO É OPCIONAL, SE VC DESEJA TER ALGUMAS PUBLIC SUBNETS (e receber incoming http requests)..






