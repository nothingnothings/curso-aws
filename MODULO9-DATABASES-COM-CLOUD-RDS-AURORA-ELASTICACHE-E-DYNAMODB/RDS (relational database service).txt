 









 --> OK... AGORA DEVEMOS DAR 1 OLHADA NESSES KEY-SERVICES MENCIONADOS...










 -> COMEÇAMOS PELO RDS (RELATIONAL DATABASE SERVICE)...











 É UM MANAGED SQL DATABASE SERVICE --> ELE TE DEIXA 



 SPIN UP 
 DATABASES 
 SQL..









 --> VC PODE CRIAR MÚLTIPLAS DATABASES,


 MAS 
 TAMBÉM 
 PODE 


 USAR 
 MÚLTIPLAS 

 DIFERENTES DATABASES,

 COM 
 DIFERENTES ENGINES... --> OU CRIAR MÚLTIPLAS DATABASES COM 1 MESMA ENGINE...














 -> MAS QUANDO CRIAMOS 1 NOVA DATABASE,

 DEVEMOS ESCOLHER A DATABASE 

 ENGINE... MYSQL OU POSTGRESQL... AÍ 



 A __ EXATA DATABASE VERSION 



 DAQUELA __ ENGINE QUE VC QUER USAR... -> DEPOIS 


 POR MEIO DO CONFIGURE DE ALGUMAS SETTINGS...









 --> SETTINGS --> SETTAR SE VC QUER 

 UPDATAR 

 AUTOMATICAMENTE PARA VERSIONS MAIS NOVAS,
 QUANDO 

 FOREM LANÇADAS...










 --> VC TAMBÉM DEVE FAZER ALGUMAS ESCOLHAS 

 ACERCA 



 ___ DO HARDWARE__ E DA NETWORK CONFIGURATION EM QUE 



 A DATABASE DEVERÁ SER COLOCADA...
















 --> ESCOLHEMOS 1 __INSTANCE CLASS_ (ou seja,
 
 1 hardware PROFILE para sua database)











 --> ESCOLHEMOS O VPC,

SUBNET E SECURITY GROUP QUE DEVERÁ SER ATTACHED A ESSA DATABASE...







(

    PQ VC TEM SECURITY GROUPS (firewalls)
    PARA 

    DATABASES TAMBÉM... 
)









E, ASSIM, COMO COM AS EC2 INSTANCES,

QUANDO 

USAMOS 

O SERVICE 

RDS,



AS 

__ INSTANCES DE RDS 


DEVEM PERTENCER A 1 VPC E A 1 SUBNET....  PQ, BASICAMENTE,


UNDER THE HOOD,


VC 

PODE PENSAR EM RDS 

INSTANCES 


PRATICAMENTE COMO EC2 INSTANCES 

QEU RODAM DATABASES (apesar de vc nao ter de as managear)...











--> OK.. VC TAMBÉM TEM QUE CONFIGURAR OUTRAS COISAS SOBRE O DATABASE SERVER,

COMO:

1) DATABASE CREDENTIALS 


2) PORTS A SEREM EXPOSTAS...





3) REPLICATION SETTINGS, PARA 

TER HIGH AVAILABILITY E PERFORMANCE ---------> O AWS PODE NOS AJUDAR COM ESSE 

MANAGED SERVICE,

PARA AUTOMATICAMENTE REPLICARMOS NOSSA DATA EM MÚLTIPLAS REPLICAS (instances dessa database),



QUE 


VAO COMPARTILHAR A MESMA DATA,





E QUE __ VAO GARANTIR QUE, SE 1 INSTANCE FOR DOWN,





VC TERÁ OUTRA INSTANCE E SUA DATA NAO SERÁ PERDIDA (
    e vc 

    nao terá de usar 1 backup,

    o que quer dizer que 

    VC VAI PODER CONTINUAR 

    OPERATIONS PQ _ VC AINDA TERÁ 

    ESSA BACKUP INSTANCE UP AND RUNNING...

)










E REPLICATION TAMBÉM PODE TE AJUDAR COM PERFORMANCE,

PQ 

SE 

VC 

TIVER MÚLTIPLAS REPLICAS,

DE 1 MESMA DATABASE (
    instances com mesma data
),




ISSO QUER DIZER QUE 

VC 


VAI PODER TAMBEM FORWARD REQUESTS 


ÀS DATABASES MAIS PRÓXIMAS DE SEUS USERS,


PARA FAZER COISAS COMO 


REDUCE LATENCY...











--> VC TAMBÉM PODE ESCOLHER VÁRIAS MONITORING SETTINGS,

PARA 

QUE 

VC TENHA TODOS OS INSIGHTS DE 
DATABASE NECESSÁRIOS..












--> E VC TAMBÉM TEM MAIS SETTINGS,

COMO ENCRYPTION E BACKUP SETTINGS,

EM QUE 


VC 

PODE 



DEFINIR 


SE SUA DATA DEVE SER ENCRYPTADA OU BACKUPADA (para restaurar sua data se algo dá errado)...
