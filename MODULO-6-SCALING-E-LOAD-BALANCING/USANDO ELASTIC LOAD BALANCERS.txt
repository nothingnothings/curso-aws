











--> OK.... QUANDO O ASSUNTO É LOAD BALANCERS,

O AWS OFERECE 2 MAIN LOAD BALANCERS QUE PODEM 

NOS AJUDAR COM O DISTRIBUTE DE TRAFFIC AO LONGO DE 


INSTANCES...










--> SÃO:



1) APPLICATION LOAD BALANCERS...












2) NETWORK LOAD BALANCERS...
















--> AS DIFERENCAS NAO SAO TAO IMPORTANTES NA PROVA...












--> MAS, EM GERAL:





1) APPLICATION LOAD BALANCERS...




--> SÃO MAIS __ FEATURE-RICH...








2) NETWORK LOAD BALANCERS...





--> SÃO MAIS LEAN, OFERECEM MENOS FEATURES...




--> ÀS VEZES OFERECEM MELHOR PERFORMANCE,



APESAR 



DE 



O APPLICATION LOAD BALANCER SER 

SUA 

CHOICE GERAL 



PARA 

O DISTRIBUTE 

DE 

TRAFFIC 



PARA TASKS COMO WEB SERVERS.... --> 








PQ COM O __APPLICATION LOAD BALANCER,


VC PODE DEFINIR 1 AMPLA VARIEDADE 

DE 
REQUEST-FORWARDING  CONDITIONS E REGRAS,



E VC TAMBÉM PODE 

INSPECIONAR 



HTTP REQUESTS E ENTÃO DECIDIR '''QUAL INSTANCE DEVE HANDLAR 

CADA TIPO DE HTTP REQUEST''',

A PARTIR 

DOS COOKIES/PATHS DO REQUEST E ASSIM POR DIANTE...












--> ISSO QUER DIZER QUE 


FICAMOS COM LOAD BALANCING RULES COMPLEXAS, NO APPLICATION LOAD BALANCER...











--> O APPLICATION LOAD BALANCER TAMBÉM 


TEM A CAPACIDADE DE ""SSL TERMINATION"" --> ISSO SIGNIFICA QUE 

O LOAD BALANCER PODE ATUAR 

COMO 

1
 

  ___ENDPOINT __ PARA INCOMING HTTPS REQUESTS --> OU SEJA,


  COMO ENDPOINT PARA 


  HTTP REQUESTS 



  ENCRIPTADOS,

  SECURE,



  ENVIADOS POR SEUS USERS... ---------> E É O LOAD BALANCER 


  QUE VAI ENTÃO 

  DECRIPTAR 

  ESSES REQUESTS,


  E AÍ 

  FORWARDAR 



    __ OS UN-ENCRYPTED REQUESTS 

    A SEUS 

    APPS 

    RODANDO 



    NA SUA 

    EC2 INSTANCE... --> MAS É CLARO QUE ESSE FORWARDING 



    OCORRE DENTRO DA AWS NETWORK,


    O QUE 

    NÃO SERÁ UM PROBLEMA...







--> A VANTAGEM,

AQUI,


É QUE 

SEU 

APP, QUE VC VAI RODAR EM 1 EC2 INSTANCE,

SEU WEB SERVER,


NAO 

VAI 

TER 

QUE 

LIDAR COM SSL CERTIFICATES 

E 

REQUEST DECRYPTION,


TUDO 

PQ O LOAD BALANCER CUIDA DISSO...









--> PORTANTO, ESSA É UMA FEATURE NEAT,



E O APPLICATION A OFERECE...











--> JÁ COM NETWORK LOAD BALANCERS...





1) TEMOS CONFIGURATION OPTIONS MAIS LIMITADAS...




2) MAS O SSL TERMINATION TAMBÉM EXISTE LÁ...





3) MAS COM O LOAD BALANCER,

VC 

GANHA 1 

IP ADDRESS FIXO PELO AWS,


QUE 



PODE SER ÚTIL PARA CERTAS TASKS...












COM O APPLICATION LOAD BALANCER,

VC NÃO GANHA 1 IP ADDRESS FIXO.... -> MAS SE VC, POR EXEMPLO,


REGISTRAR 1 CUSTOM DOMAIN, ALGO QUE VEREMOS MAIS TARDE NO CURSO,





VC _ PODERIA/PODE CONECTAR 

ESSE DOMAIN DIRETAMENTE A UM APPLICATION LOAD BALANCER,

TUDO 

PARA QUE 


A AUSENCIA 

DESSE FIXED IP NÃO SEJA 1 PROBLEMA...













--> MAS SE VC PRECISA DE 1 FIXED IP,

 O NETWORK LOAD BALANCER TE OFERECE...












COM ISSO, 


TEMOS 

1 IDEIA BÁSICA 

DA RAZÃO DE EXISTIREM


DIFERENTES TIPOS DE LOAD BALANCER...

















--> APPLICATION LOAD BALANCERS --> SÃO MT BONS PQ FAZEM MTAS COISAS,

O QUE 


_REDUZ A COMPLEXIDADE DO SEU APP...












NETWORK LOAD BALANCER --> SÃO ESPECIALMENTE ÚTEIS 


PARA CASOS EM QUE VC NAO TEM HTTP TRAFFIC --> WORKLOADS EM QUE 

VC 

QUER BALANCEAR O WORKLOAD,

MAS 1 WORKLOAD 


QUE NÃO É DE HTTP REQUESTS (OU SEJA, NÃO UM WEBSERVER),




E SIM DE OUTROS TIPOS DE WORKLOADS,

COM OUTROS TIPOS DE REQUEST,



O 


NETWORK LOAD BALANCER É  A MELHOR OPÇÃO ...














MAS PARA A MAIOR PARTE DOS HTTP APPS,

VC VAI USAR O APPLICATION LOAD BALANCER...












--> VC VAI USAR O NETWORK LOAD BALANCER 

QUANDO 

VC 
TIVER APPS QUE NAO TRABALHAM COM MTOS HTTP REQUESTS,



E SIM 


COM NON-HTTP SERVICes...





