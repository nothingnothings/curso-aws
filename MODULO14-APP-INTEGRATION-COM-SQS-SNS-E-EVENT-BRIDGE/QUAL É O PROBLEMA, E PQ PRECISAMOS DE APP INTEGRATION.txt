










QUAL É O PROBLEMA....











--> O QUE ESTAMOS ENFRENTANDO, QUANDO RODAMOS APPS NA CLOUD...















-> BEM, DIGAMOS QUE TEMOS 1 APP A..









o APP A--> É UM WEBSITE CRAWLER,

QUE 


CRAWLS WEBSITE 

E COLLECTS DATA ---> VC TEM 1 COMPANHIA DE ANALYTICS,

QUE 

VENDE 

DATA A OUTRAS COMPANIES -> VC TEM 1 APP QUE CRAWLS WEBSITES,

PARA COLETAR DATA..














ESSE APP PODERIA RODAR:




1) EM UMA EC2 INSTANCE...






2) PODERIA SER UMA LAMBDA FUNCTION QUE É TRIGGADA MÚLTIPLAS VEZES..





3) PODERIA RODAR EM 1 CONTAINER, COM O ECS...












MAS ESSA PODE NAO SER O ÚNICO APP QUE VC TEM..











-. VC PODE TER 1 APP B...









O APP B:





1) TAKES THAT DATA 


2) CLEANS THE DATA 




3) TRANSFORMS THE DATA 


4) STORES THE DATA IN A DATABASE...













--> É CLARO QUE 
PODERÍAMOS FAZER AMBAS COISAS EM 1 APP SÓ...









MAS TALVEZ SEJA MELHOR __ DECOUPLE ESSES APPS. . ->  ISSO PARA DEIXAR 



ESSES APPS MAIS LEAN,


E TAMBÉM 


PARA RODAR 



ESSES APPS COM DIFERENTES SERVICES (


    pq 

    o 
    APP A PODE SER 1 LONG RUNNING PROCESS,


    QUE É PERFEITO 

    PARA 

    O EC2 OU CONTAINERS... 



    JÁ O APP B,

    QUE LIMPA 

    E TRANSFORMA 

    DATA,


    TALVEZ SEJA 

    PERFEITO PARA 1 LAMBDA FUNCTION,

    PQ _ TALVEZ 

    SEJA 1 PROCESSO QUICK E RÁPIDO,

    QUE 

    TERMINA 1 TASK RÁPIDO, E AÍ IS DONE... MAS FAZ ESSA TASK MÚLTIPLAS VEZES....

     
)













--> É POR ISSO QUE VC VAI QUERER SPLITTAR SEU APP EM MÚLTIPLOS APPS/SERVICES..











--> TAMBÉM PARA QUE DIFERENTES TEAMS CONSIGAM TRABALHAR EM DIFERENTES APPS....









-> CERTO... MAS O PROBLEMA É QUE 



__ ESSES APPS DEVEM _ TRABALHAR EM CONJUNTO...












--> O APP B DEVE _ SER NOTIFICADO __ DE QUE """" A SITE WAS CRAWLED"""",


PARA QUE 



ENTAO __ ELE CONSIGA ___ TAKE _ E CLEAN E TRANSFORM 

AQUELA 


DATA,

PARA AQUELE WEBSITE...











--> BEM, 1 POSSÍVEL SOLUCAO A ESSE PROBLEMA  



SERIA:



""APPLICATION B EXPOSES ITS OWN CUSTOM HTTP API""


((

    API QUE VC PODERIA CONSTRUIR 

    COM API GATEWAY OU 

    O APP SYNC...
))







--> MAS VC TAMBÉM PODERIA CONSTRUIR ESSA API FROM SCRATCH,
COM CÓDIGO...









--> CERTO.. AÍ 


O APPLICATION A __ PODERIA ENVIAR 1 REQUEST 

A  ESSA API REST 



DO APP B,



DEIXANDO O 


APP B 


SABER QUE 

O 

APP A ""IS DONE CRAWLING A WEBSITE"" -->  E, AÍ ,

ESSE REQUEST 

TAMBÉM 

PODE 

CONTER 



A DATA DO WEBSITE (ou 

entao conterá 
information 

que dirá 

ao APP B 

o lugar onde ele encontrará 

essa raw data....

)














--> ESSA SOLUCAO PROVAVELMENTE FUNCIONARIA,

MAS TEM 


1 PUNHADO DE  PROBLEMAS...











PROBLEMA 1 --> VC TEM OVERHEAD EXTRA....


VC TEM EXTRA WORK, EXTRA COSTS...






EXTRA COSTS --> VC TEM QUE CONSTRUIR E MANTER AQUELA API...




-> TEM QUE RODAR AQUELA API... -> ISSO TAMBÉM PODERIA IMPACTAR 

A PERFORMANCE DO APP... --> MTOS SIDE EFFECTS...












ADICIONALMENTE,

SE VC TIVER OUTROS APPS QUE FAZEM OUTRAS COISAS, NESSA ARQUITETURA,



MAS QUE TAMBÉM PRECISAM SER NOTIFICADAS DO CRAWL,



VC 

TERIA 


DE REPLICAR 

ESSA SOLUTION 

AO LONGO DE TODOS 

ESSES APPS... (many, many times)













E SE SEU API MUDAR,

SE VC 
ENCONTRAR 

1 BUG OU QUALQUER COISA DO GENERO,


VC 

TERÁ 
DE UPDATAR ESSE CÓDIGO EM MÚLTIPLOS LUGARES...













ALÉM DISSO,

ESSES APPS 

PODEM 

NEM MESMO 

ESTAREM RODANDO EM UMA MESMA REGION/NETWORK....







-> ISSO PODERIA SER UMA ISSUE,


PQ PODE NAO SER TAO FÁCIL 

ENVIAR 1 REQUEST DO APP A PARA O APP B... -> VC 

TALVEZ SEJA 

FORCADO 


A COLOCAR ESSES SERVICES 


EM 

1 MESMO NETWORK/VPC,


SÓ PARA 

FAZER ESSA SOLUTION FUNCIONAR... AINDA QUE VC TALVEZ PREFERISSE 

UMA ESTRUTURA DIFERENTE,
POR  OUTRAS RAZOES...











--> É POR ISSO QUE APESAR DE ESSA ESTRUTURA FUNCIONAR,



TALVEZ 

ELA NAO SEJA OPTIMAL... 